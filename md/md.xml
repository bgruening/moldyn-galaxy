<tool id="protein" name="MD simulation." version="0.1.0">
    <requirements>
        <requirement type="package">gromacs</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if $mdp.mdpfile == "custom":
            ln -s '$mdp.mdp_input' ./md.mdp &&
        #end if
        #if $mdp.mdpfile == "default":
            ln -s '$md' ./md.mdp &&
        #end if

        ln -s '$gro_input' ./npt.gro &&
        ln -s '$cpt_input' ./npt.cpt &&
        ln -s '$top_input' ./top_input.top &&
        ln -s '$itp_input' ./posres.itp &&

        gmx grompp -f ./md.mdp -c ./npt.gro -t ./npt.cpt -p ./top_input.top -o md_0_1.tpr &>> verbose.txt &&
        gmx mdrun -deffnm md_0_1 &>> verbose.txt
        
    ]]></command>
        <configfiles>
            <!-- .mdp files which are needed for the gromacs simulation -->
            <configfile name="md">
title    = OPLS Lysozyme MD simulation 
; Run parameters
integrator  = $mdp.integrator    ; leap-frog integrator
nsteps    = $mdp.md_steps  ; 2 * 500000 = 1000 ps (1 ns)
dt        = $mdp.step_length    ; 2 fs
; Output control
nstxout            = $mdp.write_freq    ; save coordinates every 10.0 ps
nstvout            = $mdp.write_freq    ; save velocities every 10.0 ps
nstenergy          = $mdp.write_freq    ; save energies every 10.0 ps
nstlog            = $mdp.write_freq    ; update log file every 10.0 ps
nstxout-compressed  = $mdp.write_freq      ; save compressed coordinates every 10.0 ps
                                ; nstxout-compressed replaces nstxtcout
compressed-x-grps   = System    ; group(s) to write to the compressed trajectory file
; Bond parameters
continuation          = yes    ; Restarting after NPT 
constraint_algorithm    = lincs      ; holonomic constraints 
constraints              = $mdp.constraints  ; all bonds (even heavy atom-H bonds) constrained
lincs_iter              = 1        ; accuracy of LINCS
lincs_order              = 4        ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type        = grid    ; search neighboring grid cells
nstlist        = 10      ; 20 fs, largely irrelevant with Verlet scheme
rcoulomb      = 1.0    ; short-range electrostatic cutoff (in nm)
rvdw        = 1.0    ; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype      = PME    ; Particle Mesh Ewald for long-range electrostatics
pme_order      = 4        ; cubic interpolation
fourierspacing  = 0.16    ; grid spacing for FFT
; Temperature coupling is on
tcoupl    = V-rescale              ; modified Berendsen thermostat
tc-grps    = Protein Non-Protein  ; two coupling groups - more accurate
tau_t    = 0.1    0.1          ; time constant, in ps
ref_t    = $mdp.temperature $mdp.temperature           ; reference temperature, one for each group, in K
; Pressure coupling is on
pcoupl            = Parrinello-Rahman      ; Pressure coupling on in NPT
pcoupltype          = isotropic              ; uniform scaling of box vectors
tau_p            = 2.0                ; time constant, in ps
ref_p            = 1.0                ; reference pressure, in bar
compressibility     = 4.5e-5              ; isothermal compressibility of water, bar^-1
; Periodic boundary conditions
pbc    = xyz    ; 3-D PBC
; Dispersion correction
DispCorr  = EnerPres  ; account for cut-off vdW scheme
; Velocity generation
gen_vel    = no    ; Velocity generation is off

            </configfile>

        </configfiles>
    <inputs>
        <param argument="gro_input" type="data" format='txt' label="GRO structure file."/>
        <param argument="top_input" type="data" format='txt' label="Topology (TOP) file."/>
        <param argument="cpt_input" type="data" format='txt' label="Checkpoint (CPT) file from NVT run."/>
        <param argument="itp_input" type="data" format='txt' label="Position restraint file."/>
        
        <conditional name="mdp">
            <param name="mdpfile" type="select" label="Parameter input">
                <option value="custom">Upload own MDP file</option>
                <option value="default">Use default (partially customisable) setting</option>
            </param>
            <when value="custom">
                <param argument="mdp_input" type="data" format='mdp' label="MD parameters (MDP) file (optional; default settings if not set)."/>
                <param argument="md_steps" type="integer" label="Number of steps for the MD simulation" value="0" min="0" max="1000000" help="MD steps" />
                <param argument="temperature" type="integer" label="Temperature /K" value="0" min="0" max="1000000" help="Temperature" />
                <param argument="step_length" type="float" label="Step length in ps" value="0.1" min="0.0001" max="1.0" help="Step length in ps." />
                <param argument="write_freq" type="integer" label="Number of steps that elapse between saving data points (velocities, forces, energies)" value="1" min="0" max="1000000" help="Step length in ps." />

            </when>
            <when value="default">
                <param argument="integrator" type="select" label="Choice of integrator.">
                    <option value="md">A leap-frog algorithm (md).</option>
                    <option value="sd">A leap-frog stochastic dynamics integrator (sd).</option>
                    <option value="bd">An Euler integrator for Brownian or position Langevin dynamics (bd).</option>
                </param>
                <param argument="constraints" type="select" label="Bond constraints (constraints).">
                    <option value="none">No constraints except for those defined explicitly in the topology (none).</option>
                    <option value="h-bonds">Bonds with H-atoms. (h-bonds).</option>
                    <option value="all-bonds">All bonds (all-bonds).</option>
                    <option value="h-angles">Bonds and angles with H-atoms. (h-angles).</option>
                    <option value="all-angles">All bonds and angles (all-angles).</option>
                </param>

                 <!-- <section name="mdp" title="MDP settings" expanded="false"> -->
                <param argument="md_steps" type="integer" label="Number of steps for the MD simulation" value="0" min="0" max="1000000" help="MD steps" />
                <param argument="temperature" type="integer" label="Temperature /K" value="0" min="0" max="1000000" help="Temperature" />
                <param argument="step_length" type="float" label="Step length in ps" value="0" min="0.0001" max="1.0" help="Step length in ps." />
                <param argument="write_freq" type="integer" label="Number of steps that elapse between saving data points (velocities, forces, energies)" value="0" min="0" max="1000000" help="Step length in ps." />
                <!-- </section> -->
            </when>
        </conditional>
        
        <param name="capture_log" type="boolean" value="false" label="Generate Detailed Log" help="Generate detailed log information that can be summarized with ParseLog."/>

    </inputs>
    <outputs>
        <data name="output1" format="txt" from_work_dir="md_0_1.gro"/>
        <data name="output2" format="txt" from_work_dir="md_0_1.trr"/>
        <data name="report" format="txt" from_work_dir="verbose.txt">
            <filter>capture_log</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="gro_input" value="npt.gro" />
            <param name="top_input" value="topol.top" />
            <param name="cpt_input" value="npt.cpt" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdpfile" value="default" />
            <param name="step_length" value="0.002"/>
            <param name="md_steps" value="500"/>
            <param name="temperature" value="300"/>
            <param name="write_freq" value="5000"/>
            <param name="integrator" value="md"/>
            <param name="constraints" value="all-bonds"/>
            <output name="output1" file="md.gro" ftype="txt" compare="sim_size"/>
            <output name="output2" file="md.trr" ftype="txt" compare="sim_size"/>
        </test>
        <test>
            <param name="gro_input" value="npt.gro" />
            <param name="top_input" value="topol.top" />
            <param name="cpt_input" value="npt.cpt" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdpfile" value="custom" />
            <param name="mdp_input" value="md.mdp" />
            <output name="output1" file="md.gro" ftype="txt" compare="sim_size"/>
            <output name="output2" file="md.trr" ftype="txt" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.

It is primarily designed for biochemical molecules like proteins, lipids and nucleic acids that have a lot of complicated bonded interactions,
but since GROMACS is extremely fast at calculating the nonbonded interactions (that usually dominate simulations) many groups are also using
it for research on non-biological systems, e.g. polymers.

    ]]></help>
    <citations>
        <citation type="doi">10.1016/j.softx.2015.06.001</citation>
    </citations>
</tool>
