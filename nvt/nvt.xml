<tool id="protein" name="NVT." version="0.1.0">
    <requirements>
        <requirement type="package">gromacs</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if $mdp.mdpfile == "custom":
            ln -s '$mdp.mdp_input' ./nvt.mdp &&
        #end if
        #if $mdp.mdpfile == "default":
            ln -s '$nvt' ./nvt.mdp &&
        #end if
        
        ln -s '$gro_input' ./em.gro &&
        ln -s '$top_input' ./top_input.top &&
        ln -s '$itp_input' ./posres.itp &&

        gmx grompp -f ./nvt.mdp -c ./em.gro -r ./em.gro -p ./top_input.top -o nvt.tpr &>> verbose.txt &&
        gmx mdrun -deffnm nvt &>> verbose.txt &&
        
        #if $str == 'pdb' or $str == 'both'
            gmx editconf -f nvt.gro -o nvt.pdb &>> verbose.txt
        #end if
    ]]></command>
        <configfiles>
            <!-- .mdp files which are needed for the gromacs simulation -->
            <configfile name="nvt">
title    = OPLS Lysozyme NVT equilibration 
define    = -DPOSRES  ; position restrain the protein
; Run parameters
integrator  = md    ; leap-frog integrator
nsteps      = $mdp.nvt_steps    ; 2 * 50000 = 100 ps
dt          = $mdp.step_length    ; 2 fs
; Output control
nstxout     = $mdp.write_freq    ; save coordinates every n ps
nstvout     = $mdp.write_freq    ; save velocities every n ps
nstenergy   = $mdp.write_freq    ; save energies every n ps
nstlog      = $mdp.write_freq    ; update log file every n ps
nstxout-compressed  = $mdp.write_freq      ; save compressed coordinates every 10.0 ps
; Bond parameters
continuation          = no    ; first dynamics run
constraint_algorithm  = lincs      ; holonomic constraints 
constraints           = all-bonds  ; all bonds (even heavy atom-H bonds) constrained
lincs_iter            = 1        ; accuracy of LINCS
lincs_order           = 4        ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type         = grid   ; search neighboring grid cells
nstlist         = 10     ; 20 fs, largely irrelevant with Verlet
rcoulomb        = 1.0    ; short-range electrostatic cutoff (in nm)
rvdw            = 1.0    ; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype     = PME  ; Particle Mesh Ewald for long-range electrostatics
pme_order       = 4    ; cubic interpolation
fourierspacing  = 0.16  ; grid spacing for FFT
; Temperature coupling is on
tcoupl     = V-rescale              ; modified Berendsen thermostat
tc-grps    = Protein Non-Protein  ; two coupling groups - more accurate
tau_t      = 0.1    0.1           ; time constant, in ps
ref_t      = $mdp.temperature $mdp.temperature ; reference temperature, one for each group, in K
; Pressure coupling is off
pcoupl    = no     ; no pressure coupling in NVT
; Periodic boundary conditions
pbc    = xyz        ; 3-D PBC
; Dispersion correction
DispCorr  = EnerPres  ; account for cut-off vdW scheme
; Velocity generation
gen_vel    = yes    ; assign velocities from Maxwell distribution
gen_temp  = 300    ; temperature for Maxwell distribution
gen_seed  = -1    ; generate a random seed
            </configfile>

        </configfiles>
    <inputs>
        <param argument="gro_input" type="data" format='txt' label="GRO structure file."/>
        <param argument="top_input" type="data" format='txt' label="Topology (TOP) file."/>
        <param argument="itp_input" type="data" format='txt' label="Position restraint file."/>

        <conditional name="mdp">
            <param name="mdpfile" type="select" label="Parameter input">
                <option value="custom">Upload own MDP file</option>
                <option value="default">Use default (partially customisable) setting</option>
            </param>
            <when value="custom">
                <param argument="mdp_input" type="data" format='mdp' label="MD parameters (MDP) file (optional; default settings if not set)."/>
                <param argument="nvt_steps" type="integer" label="Number of steps for the NVT equilibration" value="0" min="0" max="1000000" help="NVT steps" />
                <param argument="temperature" type="integer" label="Temperature /K" value="0" min="0" max="1000000" help="Temperature" />
                <param argument="step_length" type="float" label="Step length in ps" value="0.1" min="0.0001" max="1.0" help="Step length in ps." />
                <param argument="write_freq" type="integer" label="Number of steps that elapse between saving data points (velocities, forces, energies)" value="0" min="0" max="1000000" help="Step length in ps." />
            </when>
            <when value="default">
                 <!-- <section name="mdp" title="MDP settings" expanded="false"> -->
                    <param argument="nvt_steps" type="integer" label="Number of steps for the NVT equilibration" value="0" min="0" max="1000000" help="NVT steps" />
                    <param argument="temperature" type="integer" label="Temperature /K" value="0" min="0" max="1000000" help="Temperature" />
                    <param argument="step_length" type="float" label="Step length in ps" value="0" min="0.0001" max="1.0" help="Step length in ps." />
                    <param argument="write_freq" type="integer" label="Number of steps that elapse between saving data points (velocities, forces, energies)" value="0" min="0" max="1000000" help="Step length in ps." />
                <!-- </section> -->
            </when>
        </conditional>
       
        <param argument="traj" type="select" label="Trajectory output.">
            <option value='none'>Return no trajectory output</option>
            <option value='xtc'>Return .xtc file (reduced precision)</option>
            <option value='trr'>Return .trr file (full precision)</option>
            <option value='both'>Return both .xtc and .trr files</option>
        </param>

        <param argument="str" type="select" label="Structure output.">
            <option value='none'>Return no trajectory output</option>
            <option value='gro'>Return .gro file</option>
            <option value='pdb'>Return .pdb file</option>
            <option value='both'>Return both .gro and .pdb files</option>
        </param>

        <param name="capture_log" type="boolean" value="false" label="Generate Detailed Log" help="Generate detailed log information that can be summarized with ParseLog."/>

    </inputs>
    <outputs>
        <data name="output1" format="txt" from_work_dir="nvt.gro">
            <filter>str == 'gro' or str == 'both'</filter>
        </data>
        <data name="output5" format="pdb" from_work_dir="nvt.pdb">
            <filter>str == 'pdb' or str == 'both'</filter>
        </data>
        <data name="output2" format="cpt" from_work_dir="nvt.cpt"/>
        <data name="output3" format="trr" from_work_dir="nvt.trr">
            <filter>traj == 'trr' or traj == 'both'</filter>
        </data>
        <data name="output4" format="xtc" from_work_dir="nvt.xtc">
            <filter>traj == 'xtc' or traj == 'both'</filter>
        </data>
        <data name="report" format="txt" from_work_dir="verbose.txt">
            <filter>capture_log</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="gro_input" value="em.gro" />
            <param name="top_input" value="topol.top" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdpfile" value="default" />
            <param name="step_length" value="0.002"/>
            <param name="nvt_steps" value="500"/>
            <param name="write_freq" value="500"/>
            <param name="temperature" value="300"/>
            <param name="traj" value="xtc"/>
            <param name="str" value="both"/>
            <output name="output1" file="nvt.gro" ftype="txt" compare="sim_size"/>
            <output name="output2" file="nvt.cpt" ftype="cpt" compare="sim_size"/>
            <output name="output4" file="nvt.xtc" ftype="xtc" compare="sim_size"/>
            <output name="output5" file="nvt.pdb" ftype="pdb" compare="sim_size"/>
            
        </test>
        <test>
            <param name="gro_input" value="em.gro" />
            <param name="top_input" value="topol.top" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdpfile" value="default" />
            <param name="step_length" value="0.002"/>
            <param name="nvt_steps" value="500"/>
            <param name="write_freq" value="500"/>
            <param name="temperature" value="300"/>
            <param name="traj" value="xtc"/>
            <param name="str" value="pdb"/>
            <output name="output2" file="nvt.cpt" ftype="cpt" compare="sim_size"/>
            <output name="output4" file="nvt.xtc" ftype="xtc" compare="sim_size"/>
            <output name="output5" file="nvt.pdb" ftype="pdb" compare="sim_size"/>
    
        </test>


        <!-- <test>
            <param name="gro_input" value="em.gro" />
            <param name="top_input" value="topol.top" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdpfile" value="default" />
            <param name="step_length" value="0.002"/>
            <param name="nvt_steps" value="500"/>
            <param name="write_freq" value="500"/>
            <param name="temperature" value="300"/>
            <param name="traj" value="trr"/>
            <output name="output1" file="nvt.gro" ftype="txt" compare="sim_size"/>
            <output name="output2" file="nvt.cpt" ftype="cpt" compare="sim_size"/>
            <output name="output3" file="nvt.trr" ftype="trr" compare="sim_size"/>
        </test> -->
        <!-- <test>
            <param name="gro_input" value="em.gro" />
            <param name="top_input" value="topol.top" />
            <param name="itp_input" value="posres.itp" />
            <param name="mdp.mdpfile" value="custom" />
            <param name="mdp_input" value="nvt.mdp" />
            <output name="output1" file="nvt.gro" ftype="txt" compare="sim_size"/>
            <output name="output2" file="nvt.cpt" ftype="txt" compare="sim_size"/>
        </test> -->
    </tests>
    <help><![CDATA[

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.

It is primarily designed for biochemical molecules like proteins, lipids and nucleic acids that have a lot of complicated bonded interactions,
but since GROMACS is extremely fast at calculating the nonbonded interactions (that usually dominate simulations) many groups are also using
it for research on non-biological systems, e.g. polymers.

    ]]></help>
    <citations>
        <citation type="doi">10.1016/j.softx.2015.06.001</citation>
    </citations>
</tool>
