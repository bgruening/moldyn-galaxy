<tool id="protein" name="A simple simulation of a protein." version="0.1.0">
    <!-- Note: this wrapper is (for now) based on Justin Lemkul's GROMACS tutorial which can be found here: http://www.bevanlab.biochem.vt.edu/Pages/Personal/justin/gmx-tutorials/lysozyme/ -->
    <requirements>
        <requirement type="package">gromacs</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[

        ln -s '$ions' ./ions.mdp &&
        ln -s '$nvt' ./nvt.mdp &&
        ln -s '$npt' ./npt.mdp &&
        ln -s '$md' ./md.mdp &&
        ln -s '$minim' ./minim.mdp &&
        ln -s '$pdb_input' ./pdb_input.pdb &&

        gmx pdb2gmx -f ./pdb_input.pdb -o processed.gro -p topol.top -i posres.itp -water $h2o -ff $ff -${ignore_h}ignh &>> verbose.txt &&

        gmx editconf -f processed.gro -o newbox.gro -c -d $box_d -bt $box_type &>> verbose.txt &&

        gmx solvate -cp newbox.gro -cs spc216.gro -o solv.gro -p topol.top &>> verbose.txt &&

        gmx grompp -f ./ions.mdp -c solv.gro -p topol.top -o ions.tpr -maxwarn 1 &>> verbose.txt &&

        echo 'SOL' | gmx genion -s ions.tpr -o solv_ions.gro -p topol.top -pname NA -nname CL -neutral &>> verbose.txt &&
    
        gmx grompp -f ./minim.mdp -c solv_ions.gro -p topol.top -o em.tpr &>> verbose.txt &&
        gmx mdrun -deffnm em &>> verbose.txt &&
        gmx grompp -f ./nvt.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr &>> verbose.txt &>> verbose.txt &&
        gmx mdrun -deffnm nvt &>> verbose.txt &>> verbose.txt &&

        gmx grompp -f ./npt.mdp -c nvt.gro -r em.gro -t nvt.cpt -p topol.top -o npt.tpr &>> verbose.txt &&
        gmx mdrun -deffnm npt &>> verbose.txt &&
        gmx grompp -f ./md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1.tpr &>> verbose.txt &&
        gmx mdrun -deffnm md_0_1 &>> verbose.txt

    ]]></command>
        <configfiles>
            <!-- .mdp files which are needed for the gromacs simulation -->
            <configfile name="ions">
; ions.mdp - used as input into grompp to generate ions.tpr
; Parameters describing what to do, when to stop and what to save
integrator  = steep    ; Algorithm (steep = steepest descent minimization, used for energy minimization)
emtol    = 1000.0    ; Stop minimization when the maximum force is less than 1000.0 kJ/mol/nm
emstep      = 0.01      ; Energy step size
nsteps    = 50      ; Maximum number of (minimization) steps to perform

; Parameters describing how to find the neighbors of each atom and how to calculate the interactions
nstlist        = 1        ; Frequency to update the neighbor list and long range forces
cutoff-scheme   = Verlet    ; group is the other option
ns_type        = grid    ; Method to determine neighbor list (simple, grid)
coulombtype      = PME    ; Treatment of long range electrostatic interactions
rcoulomb      = 1.0    ; Short-range electrostatic cut-off
rvdw        = 1.0    ; Short-range Van der Waals cut-off
pbc            = xyz     ; Periodic Boundary Conditions (yes/no)
            </configfile>
            <configfile name="minim">
; minim.mdp - used as input into grompp to generate em.tpr
integrator  = steep    ; Algorithm (steep = steepest descent minimization)
emtol    = 1000.0    ; Stop minimization when the maximum force is less than 1000.0 kJ/mol/nm
emstep      = 0.01      ; Energy step size
nsteps    = 50      ; Maximum number of (minimization) steps to perform
0
; Parameters describing how to find the neighbors of each atom and how to calculate the interactions
nstlist        = 1        ; Frequency to update the neighbor list and long range forces
cutoff-scheme   = Verlet
ns_type        = grid    ; Method to determine neighbor list (simple, grid)
coulombtype      = PME    ; Treatment of long range electrostatic interactions
rcoulomb      = 1.0    ; Short-range electrostatic cut-off
rvdw        = 1.0    ; Short-range Van der Waals cut-off
pbc            = xyz     ; Periodic Boundary Conditions (yes/no)
            </configfile>
            <configfile name="nvt">
title    = OPLS Lysozyme NVT equilibration 
define    = -DPOSRES  ; position restrain the protein
; Run parameters
integrator  = md    ; leap-frog integrator
nsteps      = $mdp.nvt_steps    ; 2 * 50000 = 100 ps
dt          = $mdp.step_length    ; 2 fs
; Output control
nstxout     = $mdp.write_freq    ; save coordinates every 1.0 ps
nstvout     = $mdp.write_freq    ; save velocities every 1.0 ps
nstenergy   = $mdp.write_freq    ; save energies every 1.0 ps
nstlog      = $mdp.write_freq    ; update log file every 1.0 ps
; Bond parameters
continuation          = no    ; first dynamics run
constraint_algorithm  = lincs      ; holonomic constraints 
constraints           = all-bonds  ; all bonds (even heavy atom-H bonds) constrained
lincs_iter            = 1        ; accuracy of LINCS
lincs_order           = 4        ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type         = grid   ; search neighboring grid cells
nstlist         = 10     ; 20 fs, largely irrelevant with Verlet
rcoulomb        = 1.0    ; short-range electrostatic cutoff (in nm)
rvdw            = 1.0    ; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype     = PME  ; Particle Mesh Ewald for long-range electrostatics
pme_order       = 4    ; cubic interpolation
fourierspacing  = 0.16  ; grid spacing for FFT
; Temperature coupling is on
tcoupl     = V-rescale              ; modified Berendsen thermostat
tc-grps    = Protein Non-Protein  ; two coupling groups - more accurate
tau_t      = 0.1    0.1           ; time constant, in ps
ref_t      = $mdp.temperature $mdp.temperature ; reference temperature, one for each group, in K
; Pressure coupling is off
pcoupl    = no     ; no pressure coupling in NVT
; Periodic boundary conditions
pbc    = xyz        ; 3-D PBC
; Dispersion correction
DispCorr  = EnerPres  ; account for cut-off vdW scheme
; Velocity generation
gen_vel    = yes    ; assign velocities from Maxwell distribution
gen_temp  = 300    ; temperature for Maxwell distribution
gen_seed  = -1    ; generate a random seed
            </configfile>
            <configfile name="npt">
title    = OPLS Lysozyme NPT equilibration 
define    = -DPOSRES  ; position restrain the protein
; Run parameters
integrator  = md    ; leap-frog integrator
nsteps    = $mdp.npt_steps    ; 2 * 50000 = 100 ps
dt        = $mdp.step_length    ; 2 fs
; Output control
nstxout    = $mdp.write_freq    ; save coordinates every 1.0 ps
nstvout    = $mdp.write_freq    ; save velocities every 1.0 ps
nstenergy  = $mdp.write_freq    ; save energies every 1.0 ps
nstlog     = $mdp.write_freq    ; update log file every 1.0 ps
; Bond parameters
continuation            = yes    ; Restarting after NVT 
constraint_algorithm    = lincs      ; holonomic constraints 
constraints             = all-bonds  ; all bonds (even heavy atom-H bonds) constrained
lincs_iter              = 1        ; accuracy of LINCS
lincs_order             = 4        ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type         = grid    ; search neighboring grid cells
nstlist         = 10      ; 20 fs, largely irrelevant with Verlet scheme
rcoulomb        = 1.0    ; short-range electrostatic cutoff (in nm)
rvdw            = 1.0    ; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype      = PME    ; Particle Mesh Ewald for long-range electrostatics
pme_order        = 4        ; cubic interpolation
fourierspacing   = 0.16    ; grid spacing for FFT
; Temperature coupling is on
tcoupl     = V-rescale              ; modified Berendsen thermostat
tc-grps    = Protein Non-Protein  ; two coupling groups - more accurate
tau_t      = 0.1    0.1          ; time constant, in ps
ref_t      = $mdp.temperature $mdp.temperature    ; reference temperature, one for each group, in K
; Pressure coupling is on
pcoupl            = Parrinello-Rahman      ; Pressure coupling on in NPT
pcoupltype        = isotropic              ; uniform scaling of box vectors
tau_p             = 2.0                ; time constant, in ps
ref_p             = 1.0                ; reference pressure, in bar
compressibility   = 4.5e-5              ; isothermal compressibility of water, bar^-1
refcoord_scaling  = com
; Periodic boundary conditions
pbc    = xyz    ; 3-D PBC
; Dispersion correction
DispCorr  = EnerPres  ; account for cut-off vdW scheme
; Velocity generation
gen_vel    = no    ; Velocity generation is off 

            </configfile>
            <configfile name="md">
title    = OPLS Lysozyme MD simulation 
; Run parameters
integrator  = md    ; leap-frog integrator
nsteps    = $mdp.md_steps  ; 2 * 500000 = 1000 ps (1 ns)
dt        = $mdp.step_length    ; 2 fs
; Output control
nstxout            = $mdp.write_freq    ; save coordinates every 10.0 ps
nstvout            = $mdp.write_freq    ; save velocities every 10.0 ps
nstenergy          = $mdp.write_freq    ; save energies every 10.0 ps
nstlog            = $mdp.write_freq    ; update log file every 10.0 ps
nstxout-compressed  = $mdp.write_freq      ; save compressed coordinates every 10.0 ps
                                ; nstxout-compressed replaces nstxtcout
compressed-x-grps   = System    ; replaces xtc-grps
; Bond parameters
continuation          = yes    ; Restarting after NPT 
constraint_algorithm    = lincs      ; holonomic constraints 
constraints              = all-bonds  ; all bonds (even heavy atom-H bonds) constrained
lincs_iter              = 1        ; accuracy of LINCS
lincs_order              = 4        ; also related to accuracy
; Neighborsearching
cutoff-scheme   = Verlet
ns_type        = grid    ; search neighboring grid cells
nstlist        = 10      ; 20 fs, largely irrelevant with Verlet scheme
rcoulomb      = 1.0    ; short-range electrostatic cutoff (in nm)
rvdw        = 1.0    ; short-range van der Waals cutoff (in nm)
; Electrostatics
coulombtype      = PME    ; Particle Mesh Ewald for long-range electrostatics
pme_order      = 4        ; cubic interpolation
fourierspacing  = 0.16    ; grid spacing for FFT
; Temperature coupling is on
tcoupl    = V-rescale              ; modified Berendsen thermostat
tc-grps    = Protein Non-Protein  ; two coupling groups - more accurate
tau_t    = 0.1    0.1          ; time constant, in ps
ref_t    = $mdp.temperature $mdp.temperature           ; reference temperature, one for each group, in K
; Pressure coupling is on
pcoupl            = Parrinello-Rahman      ; Pressure coupling on in NPT
pcoupltype          = isotropic              ; uniform scaling of box vectors
tau_p            = 2.0                ; time constant, in ps
ref_p            = 1.0                ; reference pressure, in bar
compressibility     = 4.5e-5              ; isothermal compressibility of water, bar^-1
; Periodic boundary conditions
pbc    = xyz    ; 3-D PBC
; Dispersion correction
DispCorr  = EnerPres  ; account for cut-off vdW scheme
; Velocity generation
gen_vel    = no    ; Velocity generation is off

            </configfile>
        </configfiles>
    <inputs>
        <param argument="pdb_input" type="data" format='pdb' label="PDB input file."/>
        <param argument="h2o" type="select" label="Water model">
            <option value="spce" selected="true">SPCE</option>
            <!-- More here -->
        </param>
        <param argument="ff" type="select" label="Force field">
            <option value="oplsaa" selected="true">OPLS/AA</option>
            <option value="CHARMM">CHARMM</option>
            <!-- More here -->
        </param>
        <param argument="ignore_h" type="boolean" label="Ignore hydrogens" truevalue="" falsevalue="no" help="ignore hydrogens" />
        <param argument="box_d" type="float" label="Box dimensions" value="0.0" min="0.0" max="10.0" help="Box dimensions" />
        <param argument="box_type" type="select" label="Box type"
            help="triclinic is a triclinic box, cubic is a rectangular box with all sides equal dodecahedron represents a rhombic dodecahedron and octahedron is a truncated octahedron. The last two are special cases of a triclinic box. The length of the three box vectors of the truncated octahedron is the shortest distance between two opposite hexagons. Relative to a cubic box with some periodic image distance, the volume of a dodecahedron with this same periodic distance is 0.71 times that of the cube, and that of a truncated octahedron is 0.77 times.">
            <option value="cubic">Rectangular box with all sides equal (cubic)</option>
            <option value="triclinic">Triclinic</options>
            <option value="dodecahedron">represents a rhombic dodecahedron (dodecahedron)</options>
            <options value="octahedron">truncated octahedron (octahedron)</options>
        </param>

        <section name="mdp" title="MDP settings" expanded="false">
            <param argument="md_steps" type="integer" label="Number of steps for the MD simulation" value="0" min="0" max="1000000" help="MD steps" />
            <param argument="nvt_steps" type="integer" label="Number of steps for the NVT equilibration" value="0" min="0" max="1000000" help="NVT steps" />
            <param argument="npt_steps" type="integer" label="Number of steps for the NPT equilibration" value="0" min="0" max="1000000" help="NPT steps" />
            <param argument="temperature" type="integer" label="Temperature /K" value="0" min="0" max="1000000" help="Temperature" />
            <param argument="step_length" type="float" label="Step length in ps" value="0" min="0.0001" max="1.0" help="Step length in ps." />
            <param argument="write_freq" type="integer" label="Number of steps that elapse between saving data points (velocities, forces, energies)" value="0" min="0" max="1000000" help="Step length in ps." />
        </section>
        <param name="capture_log" type="boolean" value="false" label="Generate Detailed Log" help="Generate detailed log information that can be summarized with ParseLog."/>

    </inputs>
    <outputs>
        <data name="output1" format="trr" from_work_dir="md_0_1.trr"/>
        <data name="report" format="txt" from_work_dir="verbose.txt">
            <filter>capture_log</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="pdb_input" value="1AKI.pdb" />
            <param name="h2o" value="spce" />
            <param name="ff" value="oplsaa" />
            <param name="ignore_h" value="no" />
            <param name="box_d" value="1.0" />
            <param name="box_type" value="cubic" />
            <param name="step_length" value="0.002"/>
            <param name="md_steps" value="500"/>
            <param name="nvt_steps" value="50"/>
            <param name="npt_steps" value="50"/>
            <param name="temp" value="300"/>
            <param name="write_freq" value="5000"/>
            <output name="output1" file="md.trr" ftype="trr" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.

It is primarily designed for biochemical molecules like proteins, lipids and nucleic acids that have a lot of complicated bonded interactions,
but since GROMACS is extremely fast at calculating the nonbonded interactions (that usually dominate simulations) many groups are also using
it for research on non-biological systems, e.g. polymers.

    ]]></help>
    <citations>
        <citation type="doi">10.1016/j.softx.2015.06.001</citation>
    </citations>
</tool>
